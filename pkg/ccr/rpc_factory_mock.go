// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/rpc/rpc_factory.go
//
// Generated by this command:
//
//	mockgen -source=pkg/rpc/rpc_factory.go -destination=pkg/ccr/rpc_factory_mock.go -package=ccr
//
// Package ccr is a generated GoMock package.
package ccr

import (
	reflect "reflect"

	base "github.com/selectdb/ccr_syncer/pkg/ccr/base"
	rpc "github.com/selectdb/ccr_syncer/pkg/rpc"
	gomock "go.uber.org/mock/gomock"
)

// MockIRpcFactory is a mock of IRpcFactory interface.
type MockIRpcFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIRpcFactoryMockRecorder
}

// MockIRpcFactoryMockRecorder is the mock recorder for MockIRpcFactory.
type MockIRpcFactoryMockRecorder struct {
	mock *MockIRpcFactory
}

// NewMockIRpcFactory creates a new mock instance.
func NewMockIRpcFactory(ctrl *gomock.Controller) *MockIRpcFactory {
	mock := &MockIRpcFactory{ctrl: ctrl}
	mock.recorder = &MockIRpcFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRpcFactory) EXPECT() *MockIRpcFactoryMockRecorder {
	return m.recorder
}

// NewBeRpc mocks base method.
func (m *MockIRpcFactory) NewBeRpc(be *base.Backend) (rpc.IBeRpc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewBeRpc", be)
	ret0, _ := ret[0].(rpc.IBeRpc)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewBeRpc indicates an expected call of NewBeRpc.
func (mr *MockIRpcFactoryMockRecorder) NewBeRpc(be any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewBeRpc", reflect.TypeOf((*MockIRpcFactory)(nil).NewBeRpc), be)
}

// NewFeRpc mocks base method.
func (m *MockIRpcFactory) NewFeRpc(spec *base.Spec) (rpc.IFeRpc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewFeRpc", spec)
	ret0, _ := ret[0].(rpc.IFeRpc)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewFeRpc indicates an expected call of NewFeRpc.
func (mr *MockIRpcFactoryMockRecorder) NewFeRpc(spec any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewFeRpc", reflect.TypeOf((*MockIRpcFactory)(nil).NewFeRpc), spec)
}
